---
title: "Creating Maps"
code-fold: true
---

## Setup and Data Import

```{r}
#| output: false
library(tidyverse)
library(tigris)
library(tidycensus)
library(sf)
library(leaflet)
library(mapview)
library(formattable)
library(scales)
library(tmap)
library(mapgl)

ld <- scales::label_dollar()



austin <- places(state = "TX")%>%
  filter(str_detect(NAME, "Austin"))
  
austin_boundary <- st_cast(austin, "MULTILINESTRING")

median_income <- "B19013_001"

austin_income <- get_acs(
  geography = "tract",
  variables = median_income,
  state = "TX",
  county = c("Travis","Hays","Williamson"),
  geometry = TRUE
)%>%
  st_filter(austin, .predicate = st_intersects)

austin_roads_primary <- primary_roads(year = 2023, filter_by= austin_boundary)
travis_water <- area_water("TX","Travis",2023)


capcog_counties <- c("Bastrop", "Blanco", "Burnet", "Caldwell", "Lee", "Fayette", "Hays", "Llano", "Travis", "Williamson")

median_rent <- get_acs(
  geography = "tract",
  variables = "B25064_001",
  year = 2023,
  state = "TX",
  county = capcog_counties,
  geometry = TRUE
)

median_rent_county <- get_acs(
  geography = "county",
  variables = "B25064_001",
  year = 2023,
  state = "TX",
  county = capcog_counties,
  geometry = TRUE
)

```

## Creating Static Maps

### ggplot2 package

```{r}

ggplot(austin_income, aes(fill = estimate))+
  geom_sf(color = NA)+
  scale_fill_distiller(
    name = "Dollars", 
    labels = scales::dollar_format(), 
    palette = "Spectral", direction = 1)+
  theme_void()+
  geom_sf(data = travis_water, size = 1, fill = "white", color = "white")+
  #Optional city boundary below, uncomment to include:
  #geom_sf(data = austin_boundary, size = .5, fill = NA, color = "black", linetype = "dashed")+
  geom_sf(data = austin_roads_primary, , size = 3, fill = NA, color = "darkgray")+
  labs(
    title = "Austin Median Household Income",
    caption = "Source: 2022 ACS 5-year estimates"
  )
  

```

### tmap package
```{r}
tm_shape(austin_income)+
  tm_polygons(
              col = "estimate",
              palette = "Greens",
              title = "2022 ACS 5-year estimates"
              )+
  tm_scale_bar(position = c("left", "bottom"))+ 
  tm_compass(position = c("right", "top")) + 
  tm_layout(title = "Austin Median\nHousehold Income",
            frame = FALSE,
            legend.outside = TRUE
  )+
  tm_shape(austin_roads_primary) +
  tm_lines(col = "tan")+
  tm_shape(travis_water)+
  tm_polygons(col = "lightblue", border.col = "lightblue")
```

## Interactive Maps

### mapview package

```{r}
mapview(austin_income, zcol = "estimate")+
  mapview(austin_boundary)
```

### Leaflet package

```{r}
bins <- c(0, 25000, 50000, 75000, 100000, 125000, Inf)

palette <- colorBin("Spectral", domain = austin_income$estimate, bins = bins)

labels <- sprintf("<strong>%s</strong><br/>%g", austin_income$NAME, austin_income$estimate)%>% 
  lapply(htmltools::HTML)

leaflet(data = austin_income)%>%
  clearBounds()%>%
  addProviderTiles(providers$CartoDB.Positron)%>%
  addPolygons(
    fillColor = ~palette(estimate),
    opacity = 1,
    color = "NA",
    weight = 0.5,
    fillOpacity = 0.7,
    highlightOptions = highlightOptions(
      weight = 1.5,
      color = "black",
      fillOpacity = 1,
      bringToFront = FALSE
    ),
    label = labels,
    labelOptions = labelOptions(
    style = list("font-weight" = "normal", padding = "3px 8px"),
    textsize = "12px",
    direction = "auto")
  )%>%
  addLegend(
    pal = palette,
    values = ~estimate,
    opacity = 0.7,
    title = NULL,
    position = "bottomright"
  )%>%
  addPolylines(data = austin_boundary, color = "black", opacity = 1, weight = 2, dashArray = 3)


```

### mapgl package


```{r}
# Format the popups
tract_popup_content <- glue::glue(
  "<strong>{median_rent$NAME}</strong><br>",
  "Median Gross Rent: {scales::dollar_format()(median_rent$estimate)}"
)

tract_hover_content <- glue::glue(
  "{scales::dollar_format()(median_rent$estimate)}"
)

median_rent$popup <- tract_popup_content
median_rent$hover <- tract_hover_content

county_popup_content <- glue::glue(
  "<strong>{median_rent_county$NAME}</strong><br>",
  "Median Gross Rent: {scales::dollar_format()(median_rent_county$estimate)}"
)

county_hover_content <- glue::glue(
  "{scales::dollar_format()(median_rent_county$estimate)}"
)

median_rent_county$popup <- county_popup_content
median_rent_county$hover <- county_hover_content


maplibre(
  style = carto_style("positron"),
  center = c(-97.72888, 30.27567),
  zoom = 7.5
) |>
  set_projection("globe") |> 
  add_source( 
    id = "us-tracts",
    data = median_rent,
    tolerance = 0
  ) |> 
  add_fill_layer(
    id = "fill-layer",
    source = median_rent,
    fill_color = interpolate(
      column = "estimate",
      values = c(500, 1500, 2000, 2500, 3000),
      stops = c("#2b83ba", "#abdda4", "#ffffbf", "#fdae61", "#d7191c"),
      na_color = "lightgrey"
    ),
    fill_opacity = 0.7,
    min_zoom = 9,
    tooltip = "hover",
    hover_options = list(
      fill_color = "magenta",
      fill_opacity = 1
    ),
    popup = "popup"
  ) |> 
  add_fill_layer(
    id = "county-fill-layer",
    source = median_rent_county,
    fill_color = interpolate(
      column = "estimate",
      values = c(500, 1000, 1500, 2000, 2500),
      stops = c("#2b83ba", "#abdda4", "#ffffbf", "#fdae61", "#d7191c"),
      na_color = "lightgrey"
    ),
    fill_opacity = 0.7,
    max_zoom = 8.99,
    tooltip = "hover",
    hover_options = list(
      fill_color = "magenta",
      fill_opacity = 1
    ),
    popup = "popup"
  ) |>
  add_continuous_legend(
    "Median gross rent",
    values = c("$500", "$1k", "$1.5k", "2k", "$2.5k"),
    colors = c("#2b83ba", "#abdda4", "#ffffbf", "#fdae61", "#d7191c")
  )

```